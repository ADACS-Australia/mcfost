# This is a basic workflow to help you get started with Actions

name: build-gfortran-linux

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    # branches: [ master ]
  pull_request:
    # branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      MCFOST_INSTALL: "/home/runner/work"
      MCFOST_NO_XGBOOST: "yes"
      SYSTEM: "gfortran"
      MCFOST_GIT: "1"

    steps:
    - uses: actions/checkout@v2

    # - name: remove "#" from all deb-scr lines
    #   run: sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list

    # - name: update apt-get
    #   run: sudo apt-get update

    # - name: install build-essential
    #   run: sudo apt-get install build-essential
      
    # - name: install gfortran
    #   run: sudo apt-get install gfortran

    # - name: prepare HDF5 environment
    #   run: sudo apt-get build-dep hdf5

    # - name: install HDF5
    #   run: sudo apt-get install libhdf5-serial-dev

    # - name: install cfitsio
    #   run: sudo apt install libcfitsio-dev

    # - name: install voro++
    #   run: sudo apt install voro++

    # - name: install sprng2
    #   run: sudo apt-get install libsprng2

    # - name: cache dependencies
    #   id: cache-deps
    #   uses: john-shaffer/cache@main     # Need this to unpack the cache tar with sudo
    #   env:
    #     cache-name: cache-mcfost-dependencies
    #   with:
    #     path: |
    #       /usr/local/Cellar/gcc/13.1.0
    #       /usr/local/Cellar/hdf5/1.14.1
    #       /usr/local/Cellar/cfitsio/4.3.0
    #       /usr/local/Cellar/voro-dev/0.4.6+
    #       /usr/local/Cellar/sprng2/2.0
    #     key: ${{ runner.os }}-build-${{ env.cache-name }}

    #   # Restoring the brew installs from cache doesn't put files where mcfost expects
    #   # Manually create symlinks so the compiler can find everything
    # - if: ${{ steps.cache-deps.outputs.cache-hit == 'true' }}
    #   name: add symbolic links if cache exists
    #   run: |
    #     ln -s /usr/local/Cellar/gcc/13.1.0/bin/gfortran /usr/local/bin/gfortran
    #     ln -s /usr/local/Cellar/sprng2/2.0/include/* /usr/local/include
    #     ln -s /usr/local/Cellar/sprng2/2.0/lib/* /usr/local/lib
    #     ln -s /usr/local/Cellar/voro-dev/0.4.6+/include/* /usr/local/include
    #     ln -s /usr/local/Cellar/voro-dev/0.4.6+/lib/libvoro++* /usr/local/lib
    #     ln -s /usr/local/Cellar/hdf5/1.14.1/include/* /usr/local/include
    #     ln -s /usr/local/Cellar/hdf5/1.14.1/lib/lib* /usr/local/lib
    #     ln -s /usr/local/Cellar/cfitsio/4.3.0/lib/libcfitsio* /usr/local/lib

    - name: update gcc to v12 # Using gcc-11 will return a bug when compiling gas/wavelengths_gas.f90
      run: |
           sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 12
           sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 12
           sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-12 12
           sudo update-alternatives --config gcc
           
    # - name: check gcc version
    #   run: |
    #        gcc --version
    #        gfortran --version

    - name: prepare mcfost environment
      run: |
           cd lib
           ./install.sh
           cd ..

    - name: check environment tree
      run: |
           sudo apt-get install tree
           tree /home/runner/work

    - name: compile mcfost
      run: |
           cd src
           make all

      

      
